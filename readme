Assignment 3 readme File

------------------------------------------------------------------------
What is your name?
Josh Schoenberg


------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

Documents that are referenced directly by the course's website. 
Such documents include the course's lecture slides and precept handouts.

The man pages on the armlab cluster.

The course's current staff members outside of class time through office 
hours.

The course's current staff members outside of class time through Ed.

The course's current staff members outside of class time through e-mail.

Current Intro Lab TAs through visits to the Intro COS Lab


------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None.


------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?
I thought it was very fun to think through the expansion, and it was a 
helpful assignment.


------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."
None. 


------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."
symtablelist.c: line 59: medium priority:
Do you want to validate 'pvValue' through an assert?
    As we have mentioned, pvValue does NOT need to be validated that it 
    is not NULL. pvValue does not need to have a value, since we do not 
    (and canot because we do not know its type) even attempt to 
    dereference pvValue in SymTable_put. Moreover, it is even possible 
    for pvValue to be equal to NULL. 
    
symtablelist.c: line 102: medium priority:
Do you want to validate 'pvValue' through an assert?
    As we have mentioned, pvValue does NOT need to be validated that it 
    is not NULL. 
symtablelist.c: line 205: medium priority:
Do you want to validate 'pvExtra' through an assert?
        As we saw in precept, pvExtra, in fact, CAN be NULL, as 
        SymTable_Map does not attempt to dereference it. Therefore,  it 
        does not need to be validated through an assert.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.

------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."
symtablelist.c: line 59: medium priority:
Do you want to validate 'pvValue' through an assert?
    As we have mentioned, pvValue does NOT need to be validated that it 
    is not NULL. pvValue does not need to have a value, since we do not 
    (and canot because we do not know its type) even attempt to 
    dereference pvValue in SymTable_put. Moreover, it is even possible 
    for pvValue to be equal to NULL. 
    
symtablelist.c: line 102: medium priority:
Do you want to validate 'pvValue' through an assert?
    As we have mentioned, pvValue does NOT need to be validated that it 
    is not NULL. 
symtablelist.c: line 205: medium priority:
Do you want to validate 'pvExtra' through an assert?
        As we saw in precept, pvExtra, in fact, CAN be NULL, as 
        SymTable_Map does not attempt to dereference it. Therefore,  it 
        does not need to be validated through an assert.


------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed ____0.000000____ seconds.
-- 500 bindings consumed ____0.003368____ seconds.
-- 5000 bindings consumed ____1.084772____ seconds.
-- 50000 bindings consumed ____107.078046____ seconds.
-- 500000 bindings consumed ___More than 5 minutes._____ seconds.

The non-expanding hash table implementation with:
-- 50 bindings consumed ___0.000000_____ seconds.
-- 500 bindings consumed ___0.000000_____ seconds.
-- 5000 bindings consumed ___0.012060_____ seconds.
-- 50000 bindings consumed ___0.379702_____ seconds.
-- 500000 bindings consumed ____70.370616____ seconds.

The expanding hash table implementation with:
-- 50 bindings consumed __0.000000______ seconds.
-- 500 bindings consumed ___0.000000_____ seconds.
-- 5000 bindings consumed ____0.007270____ seconds.
-- 50000 bindings consumed __0.133673______ seconds.
-- 500000 bindings consumed __1.759755______ seconds.
